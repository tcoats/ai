// Generated by CoffeeScript 1.7.1
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

define(['inject'], function(inject) {
  var AI;
  AI = (function() {
    function AI() {
      this.register = __bind(this.register, this);
      this.step = __bind(this.step, this);
      this.setup = __bind(this.setup, this);
      this.entities = [];
      inject.bind('setup', this.setup);
      inject.bind('step', this.step);
      inject.bind('register ai', this.register);
    }

    AI.prototype.setup = function() {
      return inject.one('stat notify')('istouched', (function(_this) {
        return function(entity, _, istouched) {
          if (!entity.ai) {
            return;
          }
          if (istouched) {
            return inject.one('abs stat')(entity, {
              timesincetouch: 0
            });
          } else {
            return inject.one('rel stat')(entity, {
              timesincetouch: 1
            });
          }
        };
      })(this));
    };

    AI.prototype.step = function() {
      var entity, _i, _len, _ref, _results;
      _ref = this.entities;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        entity = _ref[_i];
        _results.push(entity.step());
      }
      return _results;
    };

    AI.prototype.register = function(entity, n) {
      return require([n], (function(_this) {
        return function(type) {
          entity.ai = new type(entity, n);
          entity.createdAt = new Date().getTime();
          return _this.entities.push(entity.ai);
        };
      })(this));
    };

    return AI;

  })();
  return new AI();
});
